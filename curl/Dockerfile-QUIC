FROM ubuntu:24.04 AS build

ARG CURL_VERSION=8.10.1
ARG QUICHE_VERSION=0.22.0

RUN apt-get update -y && \
    apt-get install --no-install-recommends -y cmake gcc ninja-build libunwind-dev pkg-config build-essential cargo git wget && \
    rm -rf /var/lib/apt/lists/*

# Set working directory to /root
WORKDIR /root

# Clone BoringSSL and liboqs
RUN git clone --branch master https://github.com/open-quantum-safe/boringssl.git bssl && \
    git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs.git

# Build liboqs
WORKDIR /root/liboqs/build
RUN cmake -G"Ninja" -DCMAKE_INSTALL_PREFIX=../../bssl/oqs -DOQS_USE_OPENSSL=OFF .. && \
    ninja && ninja install

# Build BoringSSL
WORKDIR /root/bssl/build
RUN cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=1 .. && \
    ninja && ninja install && \
    cp -rp ../install/include /usr/local/include/bssl && \
    cp -rp ../install/lib /usr/local/lib/bssl

# Clone and build quiche
WORKDIR /root
RUN git clone --recursive -b ${QUICHE_VERSION} https://github.com/cloudflare/quiche && \
    rm -R quiche/quiche/deps/boringssl && \
    ln -s /root/bssl quiche/quiche/deps/boringssl && \
    cd quiche && \
    cargo build --package quiche --release --features ffi,pkg-config-meta,qlog && \
    cp -p target/release/libquiche.so /usr/local/lib/bssl/libquiche.so.0

# Clone and build curl
RUN wget https://curl.se/download/curl-${CURL_VERSION}.tar.gz && \
    tar -zxf curl-${CURL_VERSION}.tar.gz && rm -R curl-${CURL_VERSION}.tar.gz && \
    mv curl-${CURL_VERSION} curl

WORKDIR /root/curl
RUN LIBS=-lpthread ./configure LDFLAGS="-Wl,-rpath,/usr/local/lib/bssl" \
    --with-openssl=/root/bssl/install --with-quiche=/root/quiche/target/release --without-libpsl \
    --prefix="/usr/local/curl" && \
    make && make install

# Stage 2: Final image
FROM ubuntu:24.04

COPY --from=build /usr/local/include/bssl /usr/local/include/bssl
COPY --from=build /usr/local/lib/bssl /usr/local/lib/bssl
COPY --from=build /usr/local/curl /usr/local/curl

RUN ln -s /usr/local/curl/bin/curl /usr/local/bin/curl
